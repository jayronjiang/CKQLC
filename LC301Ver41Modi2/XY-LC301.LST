C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE XY_LC301
OBJECT MODULE PLACED IN XY-LC301.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE XY-LC301.C OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          
   2          /***************************************************************************
   3          Modula:    XY-LC-301
   4          Version:   4.1
   5          Revisor:   Liu XingZhou
   6          StartDate: 2004/04/05
   7          LastUpdate:2008/06/08
   8          ***************************************************************************/
   9          
  10          //#define TEST
  11          //#define _DEBUG
  12          //#pragma ot(0,speed)
  13          
  14          //==============================================================================================
  15          #include <Reg52.h>
  16          #include <intrins.h>
  17          #include "XY-LC301.h"
  18          //=============================================================================================
  19          #ifdef _DEBUG
              char code VerInfo[]="LC-301-V4.1-debug";
              #else
  22          char code VerInfo[]="LC-301-V4.1-160321";
  23          #endif
  24          char code *CodeMark[]={
  25              "CODEMARK[Lane Control for general purpose use.",
  26              __DATE__,
  27              "]"
  28          };
  29          //---------------------------------------------------------------------------------------------
  30          bit bdata buffer_star;
  31          bit bdata buffer_sto;
  32          bit bdata message_right;
  33          bit bdata message_wrong;
  34          bit bdata dete_change;
  35          bit bdata bTTL_ALG_Wrong;
  36          
  37          bit bdata bEnBarAutoDown;
  38          bit bdata con_speak_fee;
  39          bit bdata dete_bit_recd;
  40          
  41          bit bdata alarm_flag;
  42          
  43          bit bdata TTL_working_wrong;  //TongXing Lamp
  44          bit bdata ALG_working_wrong;  //Auto-LanGan
  45          
  46          bit bdata ALG_up_flag_bit;
  47          bit bdata ALG_down_flag_bit;
  48          bit bdata LastLaneLampState;
  49          bit bdata watching_car_passing; //”√”⁄∑¿‘“π¶ƒ‹:‘⁄≥µ¡æ¥”œﬂ»¶¿Îø™°¢Ωµ∏Õµƒπ˝≥Ã÷√1£¨∆Ù∂Ø∑¿‘“º‡ ”,¿∏∏À≥πµ◊Ωµœ¬ª
             -Ú‘ÚΩ” ’µΩÃß∏À√¸¡Ó£¨÷√0£¨Õ£÷πº‡ ”
  50          
  51          bit bdata bLastLaneRedGreenOperateState;
  52          bit bdata bALGTTLAutoDetect;
  53          bit bdata bFeeCleared;
  54          bit bdata bTXok;
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 2   

  55          
  56          unsigned char data COMM_buff[COMM_LENTH];
  57          unsigned char data send_addr;
  58          unsigned char data tmp_use1;
  59          unsigned char data alarm_time_counter;
  60          unsigned char data detect_time_counter; 
  61          
  62          unsigned char data ReceiveIndicateCount;
  63          unsigned char data ReceiveTimeoutCount;
  64          
  65          unsigned char data WatchingDelayCount=0;
  66          //-----------------------------------------------------------------------------
  67          unsigned char bdata control_char1;         //'A' TYPE message
  68          sbit  ALG_up_bit      =control_char1^0; 
  69          sbit  ALG_down_bit    =control_char1^1;
  70          sbit  TTL_green_bit   =control_char1^2;
  71          sbit  VOX_alarm_bit   =control_char1^3;
  72          sbit  Light_alarm_bit =control_char1^4;
  73          sbit  Lane_lamp_bit   =control_char1^5;   //CheDao TongXing Lamp
  74          sbit  control_bak1_bit=control_char1^6;
  75          sbit  control_bak2_bit=control_char1^7;
  76          
  77          unsigned char bdata control_char_bak2;            //'A' type message
  78          sbit  ALG_control_mode  =control_char_bak2^0; //Mode: Auto LG or Manual LG
  79          sbit  FEE_display_bit   =control_char_bak2^1;
  80          sbit  SPEAK_control_bit =control_char_bak2^2;
  81          sbit  FEE_displaykeep_bit=control_char_bak2^3;  //”√”⁄π¶ƒ‹£∫¬Ãµ∆∫Û£¨∑—œ‘»‘»ª±£≥÷
  82          
  83          sbit  bFeeDispSelection =control_char_bak2^4; //∑—œ‘—°‘Ò£¨1-Œﬁ±£≥÷π¶ƒ‹µƒπ„∂´”√∞Ê±æ£¨0-”–±£≥÷π¶ƒ‹µƒ…ΩŒ˜∞Ê±æ
  84          sbit  bControlOption  =control_char_bak2^5; //≥µøÿ∆˜ π”√ Ù–‘: 1-≥ˆø⁄, 0-»Îø⁄
  85          sbit  bFeeDispReserved2 =control_char_bak2^6;
  86          
  87          //-----------------------------------------------------------------------------
  88          unsigned char bdata  device_status_char1;       //'B' type message
  89          sbit  TTL_detect_bit   =device_status_char1^0;
  90          sbit  LG_detect_bit    =device_status_char1^1;
  91          sbit  ALarm_detect_bit =device_status_char1^2;
  92          sbit  ALG_detect_bit   =device_status_char1^3;
  93          sbit  FRONT_coil_bit   =device_status_char1^4;
  94          sbit  BACK_coil_bit    =device_status_char1^5;
  95          sbit  bakup_detect1_bit=device_status_char1^6;
  96          sbit  bakup_detect2_bit=device_status_char1^7;
  97          
  98           
  99          unsigned char bdata device_status_bakused;      //'B' type message 
 100          sbit  ALG_work_status=device_status_bakused^2;
 101          sbit  TTL_work_status=device_status_bakused^6;
 102          
 103          unsigned char bdata sys_tmep;                 //auto detect system used
 104          sbit sys_tmep_b7=sys_tmep^7;
 105          sbit sys_tmep_b6=sys_tmep^6;
 106          sbit sys_tmep_b5=sys_tmep^5;
 107          sbit sys_tmep_b4=sys_tmep^4;
 108          sbit sys_tmep_b3=sys_tmep^3;
 109          sbit sys_tmep_b2=sys_tmep^2;
 110          sbit sys_tmep_b1=sys_tmep^1;
 111          sbit sys_tmep_b0=sys_tmep^0;
 112          
 113          char data PowerOnFlag;    //this byte do NOT to initialize
 114          //==============================================================================================
 115          void InitSys(void);
 116          void PrintVerInfo(void);
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 3   

 117          void DumpMemory(void);
 118          void Uart1IntEntry(void);
 119          void FeedDog(void);
 120          void ddl_200us(int x);
 121          void send_mess(unsigned char);
 122          void judge_rec_message(void);
 123          void detect_device(void);
 124          void control_device(void);
 125          void control_speaker(void);
 126          void device_keep(void);
 127          void system_auto_detect(void);
 128          
 129          void delay_10s(void);
 130          void ONE_FEEdisplay_Red(void);
 131          void ONE_FEEdisplay_Green(void);
 132          void ClearFEEdisplay(void);
 133          
 134          bit  detect_ALG_TTL_working(void);
 135          void send_test();
 136          void InitApp(void);
 137          char GetControlChar(void);
 138          //--------------------------------- additional -------------------------------------------------
 139          void UpdateFEEdisplay(void);
 140          void BarOpRectifyLaneLamp(void);
 141          bit  AutoBarDowningDetect(void);
 142          //--------------------------------- extenal ----------------------------------------------------
 143          extern void TestForLC301(void); //added 0405
 144          //==============================================================================================
 145          void main(void)
 146          {
 147   1        char FlashTimes=3;
 148   1          ddl_200us(200);
 149   1        do
 150   1        {
 151   2          COMMFLASH=1;
 152   2          ddl_200us(64);
 153   2          COMMFLASH=0;
 154   2          ddl_200us(64);
 155   2          FlashTimes--;
 156   2        }while(FlashTimes>0);
 157   1      
 158   1        InitSys();
 159   1        if(PowerOnFlag!=(char)0xAA)
 160   1        {
 161   2          PowerOnFlag=(char)0xAA;
 162   2          system_auto_detect();
 163   2          InitApp();
 164   2      
 165   2          ALG_down_bit=1;
 166   2          ALG_up_bit=0;
 167   2          TTL_green_bit=0;
 168   2          VOX_alarm_bit=0;
 169   2          Light_alarm_bit=0;
 170   2          Lane_lamp_bit=0;
 171   2          control_bak1_bit=0;
 172   2          control_bak2_bit=0;
 173   2        }
 174   1        else
 175   1          PrintVerInfo();   //poweron info, used for debugging
 176   1      
 177   1        control_device();   //power on ,control TTL red and ALG down
 178   1      
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 4   

 179   1      
 180   1        TestForLC301(); //”√”⁄¿œªØ≤‚ ‘
 181   1      
 182   1        while(1)
 183   1        {
 184   2          WDT=!WDT;
 185   2      
 186   2          //------------¥¶¿ÌΩ” ’√¸¡Ó ≤ø∑÷ ------------------
 187   2          if(buffer_sto==1)
 188   2          {
 189   3            buffer_sto=0;
 190   3            FeedDog();
 191   3            judge_rec_message();
 192   3            if(message_right==1)
 193   3            {
 194   4              message_right=0;
 195   4              FeedDog();
 196   4              if(COMM_buff[2]!='1') continue; //÷ª”– «±æª˙µÿ÷∑≤≈∂‘…Ë±∏Ω¯––øÿ÷∆
 197   4              if((COMM_buff[1]=='C')&&(COMM_buff[3]=='R')) {while(1);}
 198   4              if((COMM_buff[1]=='C')&&(COMM_buff[3]=='V')) {PrintVerInfo(); continue;}
 199   4              if((COMM_buff[1]=='C')&&(COMM_buff[3]=='D')) {DumpMemory(); continue;}
 200   4              //if(COMM_buff[1]!='A') continue; //“‘œ¬÷ª¥¶¿ÌB¿‡–≈œ¢
 201   4      
 202   4              detect_ALG_TTL_working();
 203   4              send_mess(0x02);
 204   4              send_mess('B');
 205   4              send_mess('1');
 206   4              send_mess(device_status_char1);
 207   4              send_mess(device_status_bakused);
 208   4              send_mess(0x03);
 209   4              tmp_use1=('B')^('1');
 210   4              tmp_use1=tmp_use1^(device_status_bakused);
 211   4              tmp_use1=tmp_use1^device_status_char1;              
 212   4              send_mess(tmp_use1);
 213   4      
 214   4      
 215   4              //Õ‚…Ëøÿ÷∆(◊¢“‚±£≥÷‘⁄∆‰À˚øÿ÷∆÷Æ«∞)
 216   4              control_char_bak2=COMM_buff[20];
 217   4              control_char1=COMM_buff[3];
 218   4              if(ALG_up_bit)
 219   4              {
 220   5                bEnBarAutoDown=ALG_control_mode;  //◊‘∂ØΩµ∏Àƒ£ Ω
 221   5                ALG_control_mode=0;         //«Â≥˝∏√…Ë÷√Œª, …«∑“≥±÷›’ææ¸æØ≥µµ¿“£øÿ¿∏∏Àª˙–Ë«Û∑¢∆
 222   5                watching_car_passing=0;
 223   5      /*          if(BACK_coil_bit==0){
 224   5                  dete_bit_recd=1;                //Ãß∏À∫Ûø™ ºº∆∫Ûœﬂ»¶”–Œﬁ≥µπ˝ P20100603£´
 225   5                }else dete_bit_recd=0;
 226   5      */
 227   5                dete_bit_recd=0;     //Ãß∏À∫Ûø™ ºº∆∫Ûœﬂ»¶”–Œﬁ≥µπ˝ P20100603£´
 228   5              }
 229   4              BarOpRectifyLaneLamp();         //∏˘æ›œ÷≥°±ªøÿ…Ë±∏¬ﬂº≠«Èøˆ£¨µ˜’˚øÿ÷∆Œª
 230   4              control_device();
 231   4      
 232   4      
 233   4              //—Ô…˘∆˜≤Ÿ◊˜
 234   4              if(SPEAK_control_bit==1)
 235   4              {
 236   5                control_speaker();
 237   5              }
 238   4              else ddl_200us(250);    //∏√¥¶—” ±‘ºµ»”⁄ifƒ⁄µƒ ±º‰£¨±£÷§¡¨–¯∂‘∑—œ‘µƒ≤Ÿ◊˜µƒº‰∏Ù ±º‰
 239   4      
 240   4              
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 5   

 241   4              //∑—∂Óœ‘ æ≤Ÿ◊˜
 242   4              if(FEE_displaykeep_bit==0)
 243   4              {
 244   5                if(FEE_display_bit==1)    
 245   5                  UpdateFEEdisplay();   //œ‘ æ∑—”√”‡∂Ó
 246   5                else ClearFEEdisplay();   //«Â≥˝∑—∂Ó£¨¥Ú∫Ïµ∆(”––©¥Ú¬Ãµ∆“≤ø…“‘)æÕ«Â≥˝∑—∂Óœ‘ æ
 247   5              }
 248   4            }
 249   3      
 250   3            if(message_wrong==1)
 251   3            {
 252   4              message_wrong=0;
 253   4              send_mess(0x15);
 254   4              for(send_addr=0;send_addr<=3;send_addr++)
 255   4                send_mess('E');
 256   4              send_mess(0x03);
 257   4              send_mess(0x00);
 258   4            }
 259   3          }
 260   2      
 261   2              
 262   2          //------------ºÏ≤‚◊¥Ã¨≤ø∑÷ ------------------
 263   2          WDT=!WDT;
 264   2          detect_device();
 265   2      
 266   2          #ifdef TEST
                  if(TTL_detect_bit==0) //’‚¡Ω––¥˙¬Î‘⁄…ΩŒ˜Ã´æ…÷– π”√£¨µ´≤ª÷™µ¿”√”⁄ ≤√¥ƒøµƒ
                    send_test();
                  #endif
 270   2      
 271   2          if(dete_change)
 272   2          {
 273   3            dete_change=0;
 274   3            detect_ALG_TTL_working();
 275   3            send_mess(0x02); send_mess('B'); send_mess('1');
 276   3            send_mess(device_status_char1);
 277   3            send_mess(device_status_bakused);
 278   3            send_mess(0x03);
 279   3            tmp_use1='B'^'1';
 280   3            tmp_use1=tmp_use1^device_status_bakused;
 281   3            tmp_use1=tmp_use1^device_status_char1;              
 282   3            send_mess(tmp_use1);
 283   3                                           
 284   3            if(BACK_coil_bit==0)  
 285   3              dete_bit_recd=1;  ////if car on coil, record set
 286   3          }
 287   2      
 288   2      
 289   2          //∑¿÷π‘“≥µπ¶ƒ‹£¨“‘…œ◊¢ Õ≤ø∑÷µƒ∏ƒΩ¯
 290   2          WDT=!WDT;
 291   2          if(watching_car_passing){
 292   3          if(BACK_coil_bit==0)  //∫Ûœﬂ»¶”–≥µ
 293   3          {
 294   4            if(ALG_down_flag_bit&ALG_detect_bit)  //’˝‘⁄Ωµ¬‰...
 295   4            {
 296   5              ALG_up_bit=1;
 297   5              ALG_down_bit=0;
 298   5              control_device();
 299   5              bEnBarAutoDown=1; 
 300   5            }
 301   4          }}
 302   2      
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 6   

 303   2          if(ALarm_detect_bit==0) //valid is 0
 304   2          {
 305   3            alarm_time_counter=ALARM_TIME;
 306   3            VOX_alarm_bit=1;
 307   3            Light_alarm_bit=1;
 308   3            device_keep();
 309   3          }
 310   2      
 311   2          //◊‘∂ØΩµ¿∏∏À
 312   2          WDT=!WDT;
 313   2          if(bEnBarAutoDown==1)     
 314   2          {
 315   3            if(BACK_coil_bit==1)    //Back Coil Flag =1, No Car
 316   3            {
 317   4              if(dete_bit_recd==1)  //Car ever on Coil last time, this 2 line indicate Car leave Coil
 318   4              {
 319   5                dete_bit_recd=0;
 320   5                bEnBarAutoDown=0; //∏¥ŒªŒ™ ÷∂ØΩµ¿∏∏Àƒ£ Ω
 321   5                ALG_down_bit=1;
 322   5                ALG_up_bit=0;
 323   5                Lane_lamp_bit=0;  //red
 324   5                control_device();
 325   5                watching_car_passing=1; 
 326   5              }
 327   4            }
 328   3          }
 329   2            
 330   2          WDT=!WDT;
 331   2          if(bALGTTLAutoDetect)   //…Ë±∏¥ÌŒÛ◊¥Ã¨◊‘∂ØºÏ≤‚≤ø∑÷
 332   2          {
 333   3            bALGTTLAutoDetect=0;
 334   3              if(detect_ALG_TTL_working())
 335   3            {
 336   4              bTTL_ALG_Wrong=1;     //»Áπ˚ «¥ÌŒÛ◊¥Ã¨£¨√øµ±∏√±Í÷æ÷√Œª ±œÚ…œŒªª˙ª„±®
 337   4              dete_change=1;
 338   4            }
 339   3            else
 340   3            {
 341   4              if(bTTL_ALG_Wrong) dete_change=1; //¥”¥ÌŒÛ◊¥Ã¨∑µªÿµΩ’˝≥£◊¥Ã¨ ±£¨º∞ ±œÚ…œŒªª˙ª„±®
 342   4              bTTL_ALG_Wrong=0;
 343   4            }
 344   3          }
 345   2          WDT=!WDT;
 346   2        }
 347   1      }
 348          //==============================================================================================
 349          //SysInit.c
 350          
 351          /******************************************************
 352          XY-LC-301 BASIC INITIALIZATION SECTION
 353          ******************************************************/
 354          void PrintVerInfo(void)
 355          {
 356   1        char i=0;
 357   1        char chr;
 358   1        chr=VerInfo[i];
 359   1      
 360   1        FeedDog();
 361   1        send_mess('X');
 362   1        send_mess('Y');
 363   1        send_mess('-');
 364   1        while(chr!=0)
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 7   

 365   1        {
 366   2          send_mess(chr);
 367   2          i++;
 368   2          chr=VerInfo[i];
 369   2        }
 370   1        send_mess(0x0D);
 371   1        send_mess(0x0A);
 372   1      }
 373          void DumpMemory(void)
 374          {
 375   1        unsigned char *pMem=0;  
 376   1      
 377   1      
 378   1        FeedDog();
 379   1        send_mess('X');
 380   1        send_mess('Y');
 381   1        send_mess('_');
 382   1        while(pMem<0x80)
 383   1        {
 384   2          send_mess((char)*pMem);
 385   2          pMem++;
 386   2        }
 387   1        send_mess(0x0D);
 388   1        send_mess(0x0A);
 389   1      }
 390          //==============================================================================================
 391          void InitSys(void)
 392          {
 393   1            SCON=0x40;
 394   1            TMOD=0x21;
 395   1            TH1=0xFD;//9600bps when in 11.0592Mhz
 396   1            TL1=0xFD;
 397   1            TR1=1;
 398   1            ES=1;
 399   1            REN=1;
 400   1      
 401   1          TR0=1;
 402   1          ET0=1;
 403   1          PS=1;
 404   1      
 405   1        TOVOX=0;
 406   1        TOFEE=0;
 407   1        TOCPU=1;
 408   1      
 409   1          EA=1;
 410   1      }
 411          //==============================================================================================
 412          void InitApp(void)
 413          {  
 414   1        char i;    
 415   1      
 416   1        FeedDog();
 417   1        BAR_UP=1;
 418   1        BAR_DOWN=1;
 419   1        TTL_GREEN=1;
 420   1        VOX_ALM=1;
 421   1        LIGHT_ALM=1;
 422   1        LAN_LAMP=1;
 423   1        BAK1_USED=1;
 424   1        BAK2_USED=1;
 425   1          
 426   1        alarm_time_counter=0;
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 8   

 427   1        tmp_use1=0;
 428   1        send_addr=0;
 429   1        sys_tmep=0;
 430   1        control_char_bak2=0;
 431   1        control_char1=0;
 432   1        device_status_char1=0x00;   //all device disconnected
 433   1        device_status_bakused=0xbb;   //system default, all device are good
 434   1        detect_time_counter=AUTO_DETCET_TIME;
 435   1        for(i=0; i<COMM_LENTH; i++)
 436   1          COMM_buff[i]=0;
 437   1      
 438   1        ReceiveIndicateCount=0;
 439   1        ReceiveTimeoutCount=RECEIVE_TIMEOUT;
 440   1      
 441   1        buffer_star=0;
 442   1        buffer_sto=0;
 443   1        message_right=0;
 444   1        message_wrong=0;
 445   1        dete_change=0;
 446   1      
 447   1        bEnBarAutoDown=0;
 448   1        con_speak_fee=0;
 449   1        dete_bit_recd=0;
 450   1      
 451   1        alarm_flag=0;
 452   1        TTL_working_wrong=0;  //TongXing Lamp
 453   1        ALG_working_wrong=0;  //Auto-LanGan
 454   1        ALG_up_flag_bit=0;
 455   1        ALG_down_flag_bit=0;
 456   1        LastLaneLampState=0;
 457   1        watching_car_passing=0; //”√”⁄∑¿‘“π¶ƒ‹:‘⁄≥µ¡æ¥”œﬂ»¶¿Îø™°¢Ωµ∏Õµƒπ˝≥Ã÷√1£¨∆Ù∂Ø∑¿‘“º‡ ”,¿∏∏À≥πµ◊Ωµœ¬ªÚ‘ÚΩ” ’
             -µΩÃß∏À√¸¡Ó£¨÷√0£¨Õ£÷πº‡ ”
 458   1        bLastLaneRedGreenOperateState=0;
 459   1        bALGTTLAutoDetect=0; 
 460   1        bFeeCleared=0;
 461   1        bTTL_ALG_Wrong=0;
 462   1        bTXok=0;
 463   1      }
 464          
 465          //==============================================================================================
 466          void init_uart1() interrupt 4 using 3
 467          {
 468   1        static unsigned char data tmp,rec_counter;
 469   1        
 470   1        if(RI)
 471   1        {
 472   2          RI=0;
 473   2          WDT=!WDT;
 474   2          tmp=SBUF;
 475   2          if(tmp==0x02&&buffer_star==0)
 476   2          {
 477   3            rec_counter=0;
 478   3            COMM_buff[rec_counter]=tmp; 
 479   3            buffer_star=1;
 480   3            rec_counter++;
 481   3            COMMFLASH=1;
 482   3            ReceiveIndicateCount=1; //CommLedFlash Delay Count
 483   3            ReceiveTimeoutCount=RECEIVE_TIMEOUT; 
 484   3          }                      
 485   2          else
 486   2          {
 487   3            if(rec_counter<=(COMM_LENTH-1)&&buffer_star==1)
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 9   

 488   3            {
 489   4              COMMFLASH=1;
 490   4              ReceiveIndicateCount=1;
 491   4              ReceiveTimeoutCount=RECEIVE_TIMEOUT;
 492   4              COMM_buff[rec_counter]=tmp; 
 493   4              if(rec_counter==(COMM_LENTH-1))
 494   4              {
 495   5                rec_counter=0;
 496   5                buffer_star=0;
 497   5                ReceiveTimeoutCount=0;  // ˝æ›÷°Ω” ’ÕÍ£¨«Â≥˝≥¨ ±…Ë∂®÷µ
 498   5                buffer_sto=1;
 499   5              }
 500   4              else
 501   4                rec_counter++;
 502   4            }
 503   3          } 
 504   2          WDT=!WDT;
 505   2        }
 506   1        else
 507   1        {
 508   2          TI=0;
 509   2          bTXok=1;
 510   2        }
 511   1      }
 512          //==============================================================================================
 513          //Common.c
 514          //==============================================================================================
 515          void judge_rec_message()
 516          {
 517   1        unsigned char i,j;
 518   1        FeedDog();
 519   1        if(COMM_buff[0]==0x02&&COMM_buff[22]==0x03)
 520   1        {
 521   2          j=COMM_buff[1];
 522   2          for(i=2;i<=(COMM_LENTH-3);i++)
 523   2            j=COMM_buff[i]^j;
 524   2          if(j==COMM_buff[COMM_LENTH-1])
 525   2            message_right=1;
 526   2          else
 527   2            message_wrong=1;
 528   2        }
 529   1        else
 530   1        {
 531   2          message_wrong=1;
 532   2        }
 533   1      }
 534          //==============================================================================================
 535          void send_mess(unsigned char n)
 536          {
 537   1        unsigned int addtmp=1000;
 538   1        WDT=!WDT;
 539   1        COMMFLASH=1;
 540   1        bTXok=0;
 541   1        SBUF=n;
 542   1        while(1)
 543   1        {
 544   2          if(bTXok) break;
 545   2          addtmp--;
 546   2          if(addtmp==0) break;
 547   2        }
 548   1        COMMFLASH=0;
 549   1        WDT=!WDT;
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 10  

 550   1      }
 551          //==============================================================================================
 552          void ddl_200us(int x)
 553          {
 554   1        unsigned char j;
 555   1        while(x--)
 556   1        {
 557   2          for(j=0;j<33;j++)
 558   2          {WDT=!WDT; _nop_(); _nop_(); _nop_(); _nop_();}
 559   2        }
 560   1      }
 561          
 562          //==============================================================================================
 563          void timer0_int_entry() interrupt 1 using 1
 564          {
 565   1        static char DidaCount=0;
 566   1        static bit bReEntry=0;
 567   1        TH0=0xB8;TL0=0x12;      //20ms
 568   1        if(bReEntry) return;  //÷ÿ»Î¥¶¿Ì£¨∫√œÛœµÕ≥±æ…Ìæﬂ”–’‚
 569   1      
 570   1        WDT=!WDT;
 571   1        bReEntry=1;
 572   1        DidaCount++;      //Œ¢µ˜
 573   1        if(DidaCount<10) {bReEntry=0; return;}
 574   1      
 575   1        DidaCount=0;
 576   1      
 577   1        //codes below execute every 200ms
 578   1        if(WatchingDelayCount>0)
 579   1        {
 580   2          WatchingDelayCount--;
 581   2          if(WatchingDelayCount==0) watching_car_passing=0;
 582   2        }
 583   1        if(ReceiveIndicateCount>0)
 584   1        {
 585   2          ReceiveIndicateCount--;
 586   2          if(ReceiveIndicateCount==0) COMMFLASH=0;  //Close LED
 587   2        }
 588   1      
 589   1        if(ReceiveTimeoutCount>0)
 590   1        {
 591   2          ReceiveTimeoutCount--;
 592   2          if(ReceiveTimeoutCount==0)
 593   2            {buffer_star=0; buffer_sto=0;}  //Ω” ’≥¨π˝ ±º‰∏¥Œª
 594   2        }
 595   1      
 596   1      
 597   1        if(detect_time_counter>0)
 598   1          detect_time_counter--;
 599   1        else
 600   1        {
 601   2          bALGTTLAutoDetect=1;
 602   2          detect_time_counter=AUTO_DETCET_TIME;
 603   2        }
 604   1        if(alarm_time_counter>0)
 605   1        {
 606   2          alarm_time_counter--;
 607   2          if(alarm_time_counter==0)
 608   2          {
 609   3            VOX_ALM=1;  //STOP Alarm
 610   3            LIGHT_ALM=1;
 611   3          }
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 11  

 612   2        }
 613   1      
 614   1        bReEntry=0;
 615   1      }
 616          //==============================================================================================
 617          void detect_device(void)
 618          {
 619   1        unsigned char outside_tmp,outside_tmp1;
 620   1      
 621   1        FeedDog();
 622   1        outside_tmp=P2;
 623   1        if(outside_tmp!=device_status_char1)
 624   1        {
 625   2          outside_tmp1=outside_tmp;
 626   2          ddl_200us(60);  //80-40ms ;//40-20ms ;//60-30ms ;//20-10ms ;//100-50ms
 627   2          outside_tmp=P2;
 628   2          if(outside_tmp==outside_tmp1)
 629   2          {
 630   3            dete_change=1;
 631   3            device_status_char1=outside_tmp;
 632   3            if(ALG_detect_bit==0) watching_car_passing=0; 
 633   3          }
 634   2        }
 635   1      }
 636          
 637          //==============================================================================================
 638          bit  detect_ALG_TTL_working(void)
 639          {
 640   1          FeedDog();
 641   1          //detect_device();
 642   1      
 643   1          if(ALG_up_flag_bit==1)
 644   1          {
 645   2                if(ALG_detect_bit==1) ALG_work_status=0;  //Ãß∏À◊¥Ã¨
 646   2                else            ALG_work_status=1;  //’˝‘⁄Ãß∏ÀªÚ≥ˆ¥Ì
 647   2          }
 648   1          
 649   1          if(ALG_down_flag_bit==1)
 650   1          {
 651   2                if(ALG_detect_bit==0) ALG_work_status=0;  //Ωµ∏À◊¥Ã¨
 652   2                else          ALG_work_status=1;  //’˝‘⁄Ωµ∏ÀªÚ≥ˆ¥Ì
 653   2          }
 654   1          
 655   1          if(TTL_green_bit==TTL_detect_bit)
 656   1          {
 657   2                 TTL_work_status=0;
 658   2          }
 659   1          else TTL_work_status=1;
 660   1      
 661   1      
 662   1      
 663   1          if(TTL_work_status==1||ALG_work_status==1)  // ALG/TTL_work_status=0, working normal
 664   1                return 1;
 665   1          else    return 0;
 666   1      
 667   1      }
 668          //==============================================================================================
 669          // Test all extern device if work normal
 670          void system_auto_detect()
 671          {
 672   1        //  unsigned char i,j;
 673   1        FeedDog();
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 12  

 674   1      
 675   1        BAK2_USED=0;
 676   1        COMMFLASH=1;
 677   1        ddl_200us(505);WDT=0;WDT=1;
 678   1        ddl_200us(505);WDT=0;WDT=1;
 679   1        ddl_200us(505);WDT=0;WDT=1;
 680   1        ddl_200us(505);WDT=0;WDT=1;
 681   1        ddl_200us(505);WDT=0;WDT=1;
 682   1        sys_tmep=P2;        //(8-chanel input-detect legcy to P2)
 683   1      
 684   1        if(sys_tmep_b7==0)
 685   1        {
 686   2          BAK2_USED=1;
 687   2          ddl_200us(505);WDT=0;WDT=1;
 688   2          ddl_200us(505);WDT=0;WDT=1;
 689   2          ddl_200us(505);WDT=0;WDT=1;
 690   2          ddl_200us(505);WDT=0;WDT=1;
 691   2          ddl_200us(505);WDT=0;WDT=1;
 692   2          sys_tmep=P2;
 693   2      
 694   2          if(sys_tmep_b7==1)
 695   2            COMMFLASH=0;
 696   2          else
 697   2          {
 698   3            BAK2_USED=0;
 699   3            COMMFLASH=0;
 700   3          }
 701   2      
 702   2          ddl_200us(505);WDT=0;WDT=1;
 703   2          ddl_200us(505);WDT=0;WDT=1;
 704   2          ddl_200us(505);WDT=0;WDT=1;
 705   2          COMMFLASH=1;
 706   2          BAK1_USED=0;
 707   2          ddl_200us(505);WDT=0;WDT=1;
 708   2          ddl_200us(505);WDT=0;WDT=1;
 709   2          ddl_200us(505);WDT=0;WDT=1;
 710   2      
 711   2          sys_tmep=P2;
 712   2          if(sys_tmep_b6==0)
 713   2          {
 714   3            BAK1_USED=1;
 715   3            ddl_200us(505);WDT=0;WDT=1;
 716   3            ddl_200us(505);WDT=0;WDT=1;
 717   3            ddl_200us(505);WDT=0;WDT=1;
 718   3            sys_tmep=P2;
 719   3            if(sys_tmep_b6==1){COMMFLASH=0;}
 720   3            else{BAK1_USED=0;COMMFLASH=0;}
 721   3          }
 722   2      
 723   2          ddl_200us(505);WDT=0;WDT=1;
 724   2          ddl_200us(505);WDT=0;WDT=1;
 725   2          ddl_200us(505);WDT=0;WDT=1;
 726   2      
 727   2          COMMFLASH=1;        //start test lamp
 728   2          LAN_LAMP=0;       //Open Lamp
 729   2          ddl_200us(505);WDT=0;WDT=1;
 730   2          ddl_200us(505);WDT=0;WDT=1; //delay
 731   2          ddl_200us(505);WDT=0;WDT=1;
 732   2      
 733   2          sys_tmep=P2;        //read status
 734   2          if(sys_tmep_b5==0)      //if open Lamp success
 735   2          {
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 13  

 736   3            LAN_LAMP=1;     //close lamp
 737   3            ddl_200us(505);WDT=0;WDT=1;
 738   3            ddl_200us(505);WDT=0;WDT=1;
 739   3            ddl_200us(505);WDT=0;WDT=1;
 740   3            sys_tmep=P2;      //read lamp status again
 741   3                                                 
 742   3            if(sys_tmep_b5==1)    //if close lamp suceess
 743   3              COMMFLASH=0;    //finish test lamp
 744   3            else
 745   3            {
 746   4              LAN_LAMP=0;   //if close lamp fail, LED indicate fail chanel
 747   4              COMMFLASH=0;    //finish test lamp
 748   4            }
 749   3          }
 750   2                             
 751   2          ddl_200us(505);WDT=0;WDT=1;
 752   2          ddl_200us(505);WDT=0;WDT=1;
 753   2          ddl_200us(505);WDT=0;WDT=1;
 754   2          COMMFLASH=1;
 755   2          LIGHT_ALM=0;
 756   2          ddl_200us(505);WDT=0;WDT=1;
 757   2          ddl_200us(505);WDT=0;WDT=1;
 758   2          ddl_200us(505);WDT=0;WDT=1;
 759   2          
 760   2          sys_tmep=P2;                   
 761   2          if(sys_tmep_b4==0)
 762   2          {
 763   3            LIGHT_ALM=1;
 764   3            ddl_200us(505);WDT=0;WDT=1;
 765   3            ddl_200us(505);WDT=0;WDT=1;
 766   3            ddl_200us(505);WDT=0;WDT=1;
 767   3            sys_tmep=P2;
 768   3            if(sys_tmep_b4==1)
 769   3              COMMFLASH=0;
 770   3            else
 771   3            {
 772   4              LIGHT_ALM=0;
 773   4              COMMFLASH=0;
 774   4            }
 775   3          }
 776   2                                                 
 777   2          ddl_200us(505);WDT=0;WDT=1;
 778   2          ddl_200us(505);WDT=0;WDT=1;
 779   2          ddl_200us(505);WDT=0;WDT=1;
 780   2      
 781   2          COMMFLASH=1;
 782   2          VOX_ALM=0;
 783   2          ddl_200us(505);WDT=0;WDT=1;
 784   2          ddl_200us(505);WDT=0;WDT=1;
 785   2          ddl_200us(505);WDT=0;WDT=1;
 786   2      
 787   2          sys_tmep=P2;                   
 788   2          if(sys_tmep_b3==0)
 789   2          {
 790   3            VOX_ALM=1;
 791   3            ddl_200us(505);WDT=0;WDT=1;
 792   3            ddl_200us(505);WDT=0;WDT=1;
 793   3            ddl_200us(505);WDT=0;WDT=1;
 794   3            sys_tmep=P2;
 795   3            if(sys_tmep_b3==1)
 796   3              COMMFLASH=0;
 797   3            else
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 14  

 798   3            {
 799   4              VOX_ALM=0;
 800   4              COMMFLASH=0;
 801   4            }
 802   3          }
 803   2      
 804   2          ddl_200us(505);WDT=0;WDT=1;
 805   2          ddl_200us(505);WDT=0;WDT=1;
 806   2          ddl_200us(505);WDT=0;WDT=1;
 807   2          COMMFLASH=1;
 808   2          TTL_GREEN=0;
 809   2          ddl_200us(505);WDT=0;WDT=1;
 810   2          ddl_200us(505);WDT=0;
 811   2          WDT=1;ddl_200us(505);
 812   2          WDT=0;WDT=1;
 813   2      
 814   2          sys_tmep=P2;                   
 815   2          if(sys_tmep_b2==0)
 816   2          {
 817   3            TTL_GREEN=1;
 818   3            ddl_200us(505);WDT=0;WDT=1;
 819   3            ddl_200us(505);WDT=0;WDT=1;
 820   3            ddl_200us(505);WDT=0;WDT=1;
 821   3      
 822   3            sys_tmep=P2;
 823   3            if(sys_tmep_b2==1)
 824   3              COMMFLASH=0;
 825   3            else
 826   3            {
 827   4              TTL_GREEN=0;
 828   4              COMMFLASH=0;
 829   4            }
 830   3          }
 831   2        
 832   2          ddl_200us(505);WDT=0;WDT=1;
 833   2          ddl_200us(505);WDT=0;WDT=1;
 834   2          ddl_200us(505);WDT=0;WDT=1;
 835   2          COMMFLASH=1;
 836   2          BAR_DOWN=0;
 837   2          ddl_200us(505);WDT=0;WDT=1;
 838   2          ddl_200us(505);WDT=0;WDT=1;
 839   2          ddl_200us(505);WDT=0;WDT=1;
 840   2          
 841   2          sys_tmep=P2;                   
 842   2          if(sys_tmep_b1==0)
 843   2          {
 844   3            BAR_DOWN=1;
 845   3            ddl_200us(505);WDT=0;WDT=1;
 846   3            ddl_200us(505);WDT=0;WDT=1;
 847   3            ddl_200us(505);WDT=0;WDT=1;
 848   3            sys_tmep=P2;
 849   3            if(sys_tmep_b1==1)
 850   3              COMMFLASH=0;
 851   3            else
 852   3            {
 853   4              BAR_DOWN=0;
 854   4              COMMFLASH=0;
 855   4            }
 856   3          }
 857   2      
 858   2          ddl_200us(505);WDT=0;WDT=1;
 859   2          ddl_200us(505);WDT=0;WDT=1;
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 15  

 860   2          ddl_200us(505);WDT=0;WDT=1;
 861   2          COMMFLASH=1;
 862   2          BAR_UP=0;
 863   2          ddl_200us(505);WDT=0;WDT=1;
 864   2          ddl_200us(505);WDT=0;WDT=1;
 865   2          ddl_200us(505);WDT=0;WDT=1;
 866   2      
 867   2          sys_tmep=P2;                   
 868   2          if(sys_tmep_b0==0)
 869   2          {
 870   3            BAR_UP=1;
 871   3            ddl_200us(505);WDT=0;WDT=1;
 872   3            ddl_200us(505);WDT=0;WDT=1;
 873   3            ddl_200us(505);WDT=0;WDT=1;
 874   3            sys_tmep=P2;
 875   3            if(sys_tmep_b0==1)
 876   3              COMMFLASH=0;
 877   3            else
 878   3            { 
 879   4              BAR_UP=0;
 880   4              COMMFLASH=0;
 881   4            }
 882   3          }
 883   2                              
 884   2          TOVOX=1;TOFEE=1;TOCPU=0;
 885   2          //j=COMM_buff[4];
 886   2          //for(i=5;i<=19;i++)
 887   2          //  j=j^COMM_buff[i]; //bcc
 888   2          send_mess(0x02);
 889   2          send_mess('3'); //chexing
 890   2          send_mess('3'); //chezhong
 891   2          send_mess('5');
 892   2          send_mess('5');
 893   2          send_mess('0');
 894   2          send_mess('0');  //fee
 895   2          send_mess('0');
 896   2          send_mess('0');
 897   2          send_mess('3');
 898   2          send_mess('3');//bal
 899   2          send_mess('4');
 900   2          send_mess('4');
 901   2          send_mess('4');
 902   2          send_mess('4');
 903   2          send_mess('4');
 904   2          send_mess('4');//entrance
 905   2          send_mess(0x03);
 906   2          send_mess(0x00);
 907   2          TOVOX=0;TOFEE=0;TOCPU=1;
 908   2             
 909   2          ddl_200us(505);WDT=0;WDT=1;
 910   2          ddl_200us(505);WDT=0;WDT=1;
 911   2          ddl_200us(505);WDT=0;WDT=1;
 912   2          ddl_200us(505);WDT=0;WDT=1;
 913   2          ddl_200us(505);WDT=0;WDT=1;
 914   2          ddl_200us(505);WDT=0;WDT=1;
 915   2          COMMFLASH=1;
 916   2          ddl_200us(505);WDT=0;WDT=1;
 917   2          ddl_200us(505);WDT=0;WDT=1;
 918   2          ddl_200us(505);WDT=0;WDT=1;
 919   2          ddl_200us(505);WDT=0;WDT=1;
 920   2          ddl_200us(505);WDT=0;WDT=1;
 921   2          ddl_200us(505);WDT=0;WDT=1;
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 16  

 922   2          COMMFLASH=0;
 923   2          ddl_200us(505);WDT=0;WDT=1;
 924   2          ddl_200us(505);WDT=0;WDT=1;
 925   2          ddl_200us(505);WDT=0;WDT=1;
 926   2          ddl_200us(505);WDT=0;WDT=1;
 927   2          ddl_200us(505);WDT=0;WDT=1;
 928   2          ddl_200us(505);WDT=0;WDT=1;
 929   2          COMMFLASH=1;
 930   2          ddl_200us(505);WDT=0;WDT=1;
 931   2          ddl_200us(505);WDT=0;WDT=1;
 932   2          ddl_200us(505);WDT=0;WDT=1;
 933   2          ddl_200us(505);WDT=0;WDT=1;
 934   2          ddl_200us(505);WDT=0;WDT=1;
 935   2          ddl_200us(505);WDT=0;WDT=1;
 936   2          COMMFLASH=0;
 937   2          ddl_200us(505);WDT=0;WDT=1;
 938   2          ddl_200us(505);WDT=0;WDT=1;
 939   2          ddl_200us(505);WDT=0;WDT=1;
 940   2          ddl_200us(505);WDT=0;WDT=1;
 941   2          ddl_200us(505);WDT=0;WDT=1;
 942   2          ddl_200us(505);WDT=0;WDT=1;
 943   2          COMMFLASH=1;
 944   2          ddl_200us(505);WDT=0;WDT=1;
 945   2          ddl_200us(505);WDT=0;WDT=1;
 946   2          ddl_200us(505);WDT=0;WDT=1;
 947   2          ddl_200us(505);WDT=0;WDT=1;
 948   2          ddl_200us(505);WDT=0;WDT=1;
 949   2          ddl_200us(505);WDT=0;WDT=1;
 950   2          COMMFLASH=0;
 951   2          ddl_200us(505);WDT=0;WDT=1;
 952   2          ddl_200us(505);WDT=0;WDT=1;
 953   2          ddl_200us(505);WDT=0;WDT=1;
 954   2          ddl_200us(505);WDT=0;WDT=1;
 955   2          ddl_200us(505);WDT=0;WDT=1;
 956   2          ddl_200us(505);WDT=0;WDT=1;
 957   2          COMMFLASH=1;
 958   2          ddl_200us(505);WDT=0;WDT=1;
 959   2          ddl_200us(505);WDT=0;WDT=1;
 960   2          ddl_200us(505);WDT=0;WDT=1;
 961   2          ddl_200us(505);WDT=0;WDT=1;
 962   2          ddl_200us(505);WDT=0;WDT=1;
 963   2          ddl_200us(505);WDT=0;WDT=1;
 964   2          COMMFLASH=0;
 965   2                                                
 966   2          TOVOX=1;TOFEE=1;TOCPU=0;
 967   2          send_mess(0x02);
 968   2          send_mess('Y');
 969   2          send_mess(0x03);
 970   2          send_mess('Y');
 971   2          TOVOX=0;TOFEE=0;TOCPU=1;
 972   2                              
 973   2          ddl_200us(505);WDT=0;WDT=1;
 974   2          ddl_200us(505);WDT=0;WDT=1;
 975   2          ddl_200us(505);WDT=0;WDT=1;
 976   2          ddl_200us(505);WDT=0;WDT=1;
 977   2          ddl_200us(505);WDT=0;WDT=1;
 978   2          ddl_200us(505);WDT=0;WDT=1;
 979   2          ddl_200us(505);WDT=0;WDT=1;
 980   2          ddl_200us(505);WDT=0;WDT=1;
 981   2          ddl_200us(505);WDT=0;WDT=1;
 982   2          ddl_200us(505);WDT=0;WDT=1;
 983   2          ddl_200us(505);WDT=0;WDT=1;
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 17  

 984   2          ddl_200us(505);WDT=0;WDT=1;
 985   2      
 986   2          TOVOX=1;TOFEE=1;TOCPU=0;
 987   2          send_mess(0x02);
 988   2          send_mess('Z');
 989   2          send_mess(0x03);
 990   2          send_mess('Z');
 991   2          TOVOX=0;TOFEE=0;TOCPU=1;
 992   2        }
 993   1        else
 994   1        {
 995   2          BAK2_USED=1;
 996   2          COMMFLASH=0;
 997   2        }                  
 998   1      }
 999          
1000          //==============================================================================================
1001          //control.c
1002          //==============================================================================================
1003          void ONE_FEEdisplay_Red()
1004          {
1005   1        TOVOX=0;TOFEE=1;TOCPU=0;
1006   1        ddl_200us(4); //delay 2ms
1007   1      //  send_mess(0x02);       //P20100607--
1008   1      //  send_mess(GetControlChar());
1009   1      //  send_mess(0x03);
1010   1      //  send_mess(GetControlChar());
1011   1        FeedDog();
1012   1        send_mess(0x02);  //Close Lane lamp
1013   1        send_mess('Z');
1014   1        send_mess(0x03);
1015   1        send_mess('Z');
1016   1        bLastLaneRedGreenOperateState=RED;
1017   1        TOVOX=0;TOFEE=0;TOCPU=1;
1018   1      }
1019          
1020          //==============================================================================================
1021          void ONE_FEEdisplay_Green()
1022          {
1023   1        TOVOX=0;TOFEE=1;TOCPU=0;
1024   1        ddl_200us(4); //delay 2ms
1025   1      //  send_mess(0x02);         //P20100607--
1026   1      //  send_mess(GetControlChar());
1027   1      //  send_mess(0x03);
1028   1      //  send_mess(GetControlChar());
1029   1        FeedDog();
1030   1        _nop_();
1031   1        _nop_();
1032   1        send_mess(0x02);
1033   1        send_mess('Y');
1034   1        send_mess(0x03);  //Open Lane Lamp
1035   1        send_mess('Y');
1036   1        bLastLaneRedGreenOperateState=GREEN;
1037   1        TOVOX=0;TOFEE=0;TOCPU=1;
1038   1      }
1039          //==============================================================================================
1040          void ClearFEEdisplay(void)
1041          {
1042   1        if (bFeeCleared) return;
1043   1      
1044   1        FeedDog();
1045   1        bFeeCleared=1;
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 18  

1046   1        if(bLastLaneRedGreenOperateState==GREEN)
1047   1        {
1048   2          if(bFeeDispSelection==0)
1049   2            ONE_FEEdisplay_Green();   //∂‘”⁄…¬Œ˜∞Ê±æµƒ∑—œ‘£¨÷ª“™ø™¬Ãµ∆≤ª«Â≥˝∑—∂Ó
1050   2          else ONE_FEEdisplay_Red();       //∂‘”⁄π„∂´∞Ê±æµƒ∑—œ‘£¨÷ª“™ø™¬Ãµ∆ªÚ∫Ïµ∆∂º«Â≥˝∑—∂Ó
1051   2        }
1052   1        else ONE_FEEdisplay_Red();  //≤ªπ‹ «ƒƒ∏ˆ∞Ê±æµƒ∑—œ‘£¨÷ª“™ø™∫Ïµ∆∂º«Â≥˝∑—∂Ó
1053   1      }
1054          //==============================================================================================
1055          void control_device()
1056          {
1057   1        FeedDog();
1058   1      
1059   1        BAR_DOWN=1;BAR_UP=1;
1060   1      //--------¿∏∏Àøÿ÷∆---------------------
1061   1        //control_char1=COMM_buff[3];
1062   1        if(ALG_down_bit==1)
1063   1        {
1064   2          detect_device();                 //∫Ûœﬂ»¶◊¥Ã¨À¢–¬  P20200607+
1065   2          if(BACK_coil_bit==1) {      //∫Ûœﬂ»¶√ª≥µ ±≤≈¬‰∏À  P20100603£´
1066   3            ONE_FEEdisplay_Red();
1067   3      
1068   3            pinSwtichALG=0; //0Ωµ∏À
1069   3            BAR_DOWN=0;   //Valid level: low, Pusle to DOWN LG
1070   3            WatchingDelayCount=20;  //20*200us=4 senconds   20*20ms=400ms
1071   3      
1072   3            ALG_down_flag_bit=1;
1073   3            ALG_up_flag_bit=0;
1074   3          }else{                //P20100603£´
1075   3            bEnBarAutoDown=1;             //∫Ûœﬂ»¶”–≥µ£¨”√◊‘∂Ø¬‰∏ÀP20100603£´
1076   3          }
1077   2        }
1078   1      
1079   1        if(ALG_up_bit==1)
1080   1        {
1081   2          ONE_FEEdisplay_Green();
1082   2      
1083   2          pinSwtichALG=1; //1Ãß∏À
1084   2          BAR_UP=0;     //Valid level: low, Pusle to UP LG
1085   2      
1086   2          ALG_up_flag_bit=1;
1087   2          ALG_down_flag_bit=0;
1088   2        }
1089   1      //-------------------------------------
1090   1      
1091   1        if(TTL_green_bit==1)
1092   1            TTL_GREEN=0;
1093   1        else  TTL_GREEN=1;
1094   1      
1095   1        if(VOX_alarm_bit==1)
1096   1            VOX_ALM=0;
1097   1        else  VOX_ALM=1;
1098   1      
1099   1        if(Light_alarm_bit==1)
1100   1            LIGHT_ALM=0;
1101   1        else  LIGHT_ALM=1;
1102   1      
1103   1        if(Lane_lamp_bit==1)
1104   1            LAN_LAMP=0;
1105   1        else  LAN_LAMP=1;
1106   1        LastLaneLampState=Lane_lamp_bit;
1107   1      
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 19  

1108   1      
1109   1      //--------------------------------------
1110   1        ddl_200us(505);            //244  ms  (P)
1111   1        BAR_DOWN=1;BAR_UP=1;
1112   1        detect_time_counter=AUTO_DETCET_TIME;
1113   1      }
1114          
1115          //==============================================================================================
1116          void control_speaker()
1117          {
1118   1        unsigned char i,j;
1119   1        //control_char1=COMM_buff[3];
1120   1      
1121   1        FeedDog();
1122   1          if(ALG_up_bit==0&&ALG_down_bit==0)
1123   1        {
1124   2          TOVOX=1;TOFEE=0;TOCPU=0;           //TOCPU=1;      20160419M
1125   2          ddl_200us(4); //delay 2ms
1126   2          j=COMM_buff[4];
1127   2      
1128   2          for(i=5;i<=19;i++)
1129   2            j=j^COMM_buff[i]; //bcc
1130   2          send_mess(0x02);
1131   2          send_mess(COMM_buff[18]); //chexing
1132   2          send_mess(COMM_buff[19]); //chezhong
1133   2          send_mess(COMM_buff[4]);
1134   2          send_mess(COMM_buff[5]);
1135   2          send_mess(COMM_buff[6]);
1136   2          send_mess(COMM_buff[7]);  //fee
1137   2          send_mess(COMM_buff[8]);
1138   2          send_mess(COMM_buff[9]);
1139   2          send_mess(COMM_buff[10]);
1140   2          send_mess(COMM_buff[11]);//bal
1141   2          send_mess(COMM_buff[12]);
1142   2          send_mess(COMM_buff[13]);
1143   2          send_mess(COMM_buff[14]);
1144   2          send_mess(COMM_buff[15]);
1145   2          send_mess(COMM_buff[16]);
1146   2          send_mess(COMM_buff[17]);//entrance
1147   2          send_mess(0x03);
1148   2          send_mess(j);
1149   2          TOVOX=0;TOFEE=0;TOCPU=1;
1150   2        }
1151   1        
1152   1        if(ALG_up_bit==1)
1153   1        {
1154   2          TOVOX=1;TOFEE=0;TOCPU=0;      //TOCPU=1;      20160419M
1155   2          ddl_200us(4); //delay 2ms
1156   2          send_mess(0x02);
1157   2          send_mess('Y');
1158   2          send_mess(0x03);
1159   2          send_mess('Y');
1160   2          TOVOX=0;TOFEE=0;TOCPU=1;
1161   2        }   
1162   1      }
1163          //==============================================================================================
1164          //≥˝¿∏∏ÀÕ‚µƒ…Ë±∏◊¥Ã¨±£≥÷øÿ÷∆
1165          void device_keep()
1166          {
1167   1        FeedDog();
1168   1        if(TTL_green_bit==1)
1169   1          TTL_GREEN=0;
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 20  

1170   1        else  TTL_GREEN=1;
1171   1      
1172   1        if(VOX_alarm_bit==1)
1173   1          VOX_ALM=0;
1174   1        else  VOX_ALM=1;
1175   1        
1176   1        if(Light_alarm_bit==1)
1177   1          LIGHT_ALM=0;
1178   1        else  LIGHT_ALM=1;
1179   1        
1180   1        if(Lane_lamp_bit==1)
1181   1          LAN_LAMP=0;
1182   1        else  LAN_LAMP=1;    
1183   1      }
1184          //================================================================================================
1185          #ifdef TEST
              void send_test()
              {
                TOVOX=1;TOFEE=1;TOCPU=0;
                ddl_200us(4)  //delay 2ms
                FeedDog();
                send_mess(0x80);
                send_mess(0x3f);send_mess(0x30);send_mess(0x5b);
                send_mess(0x4f);send_mess(0x66);send_mess(0x6d);send_mess(0x7d);send_mess(0x07);
                send_mess(0x7f);
                send_mess(0x01);
                TOVOX=0;TOFEE=0;TOCPU=1;
              }
              #endif
1199          //==============================================================================================
1200          /***********************************************
1201          //codes below added by Liu XingZhou, 2004/05/15
1202          ***********************************************/
1203          //#include "Addtional.h"
1204          //==============================================================================================
1205          void UpdateFEEdisplay(void)
1206          {
1207   1        unsigned char i,j;
1208   1        TOVOX=0;TOFEE=1;TOCPU=0;
1209   1        ddl_200us(4); //delay 2ms
1210   1        FeedDog();
1211   1          j=COMM_buff[4];
1212   1          for(i=5;i<=19;i++)
1213   1            j=j^COMM_buff[i]; //bcc
1214   1          send_mess(0x02);
1215   1          send_mess(COMM_buff[18]); //chexing
1216   1          send_mess(COMM_buff[19]); //chezhong
1217   1          send_mess(COMM_buff[4]);
1218   1          send_mess(COMM_buff[5]);
1219   1          send_mess(COMM_buff[6]);
1220   1          send_mess(COMM_buff[7]);  //fee
1221   1          send_mess(COMM_buff[8]);
1222   1          send_mess(COMM_buff[9]);
1223   1          send_mess(COMM_buff[10]);
1224   1          send_mess(COMM_buff[11]);//bal
1225   1          send_mess(COMM_buff[12]);
1226   1          send_mess(COMM_buff[13]);
1227   1          send_mess(COMM_buff[14]);
1228   1          send_mess(COMM_buff[15]);
1229   1          send_mess(COMM_buff[16]);
1230   1          send_mess(COMM_buff[17]);//entrance
1231   1          send_mess(0x03);
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 21  

1232   1          send_mess(j);
1233   1        bFeeCleared=0;
1234   1        TOVOX=0;TOFEE=0;TOCPU=1;
1235   1      }
1236          //==============================================================================================
1237          /*bit AutoBarDowningDetect(void)  //run after detect_deivce()
1238          {
1239            if(ALG_down_flag_bit==1)    //“—æ≠∑¢ÀÕΩµ∏À√¸¡Ó
1240            {
1241              if(ALG_detect_bit==1) //¿∏∏À»‘Œ™Ãß∏À◊¥Ã¨
1242              {
1243                return 1;
1244              }
1245            }
1246            return 0;
1247          }*/
1248          //==============================================================================================
1249          /*
1250          sbit  ALG_up_bit      =control_char1^0; 
1251          sbit  ALG_down_bit    =control_char1^1;
1252          sbit  Lane_lamp_bit   =control_char1^5;
1253          */
1254          void BarOpRectifyLaneLamp(void)
1255          {
1256   1        if(ALG_up_bit&ALG_down_bit) //return; //¥ÌŒÛ≤Ÿ◊˜
1257   1          ALG_down_bit=0;
1258   1        FeedDog();
1259   1        if(ALG_up_bit) Lane_lamp_bit=1;   //¬Ãµ∆
1260   1        if(ALG_down_bit) Lane_lamp_bit=0; //∫Ïµ∆
1261   1        if((ALG_up_bit|ALG_down_bit)==0) Lane_lamp_bit=LastLaneLampState;
1262   1      }
1263          //==============================================================================================
1264          void FeedDog(void)
1265          {
1266   1        WDT=0;
1267   1        _nop_();
1268   1        _nop_();
1269   1        _nop_();
1270   1          WDT=1;
1271   1      }
1272          //==============================================================================================
1273          char GetControlChar()
1274          {
1275   1        if(bFeeDispSelection) //∑—œ‘—°‘Ò£¨1-Œﬁ±£≥÷π¶ƒ‹µƒπ„∂´”√∞Ê±æ£¨0-”–±£≥÷π¶ƒ‹µƒ…ΩŒ˜∞Ê±æ
1276   1        {
1277   2          if(bControlOption)  //≥µøÿ∆˜ π”√ Ù–‘: 1-≥ˆø⁄, 0-»Îø⁄
1278   2            return 'A';
1279   2          else return 'B';
1280   2        }
1281   1        else
1282   1        {
1283   2          if(bControlOption)  //≥µøÿ∆˜ π”√ Ù–‘: 1-≥ˆø⁄, 0-»Îø⁄
1284   2            return 'C';
1285   2          else return 'D';
1286   2        }
1287   1      }
1288          //==============================================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2455    ----
   CONSTANT SIZE    =     80    ----
C51 COMPILER V9.53.0.0   XY_LC301                                                          04/19/2016 15:08:42 PAGE 22  

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     46       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     21    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
